name: "Tests"
on:
  pull_request:
  push:
    branches:
      - '*'
permissions:
  contents: read
jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Setup Python
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: '3.10'
    - name: Cache pip downloads
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-lint-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ github.run_id }}
        restore-keys: pip-lint-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox
    - name: Run linters
      run: python -m tox -e lint,checkver
    - name: Check types
      run: python -m tox -e type
      env:
        CPPFLAGS: '-U_FORTIFY_SOURCE'
        CFLAGS: '-O0 -g0 -fvisibility=hidden -fvisibility-inlines-hidden'
    - name: Clean up
      run: python -m pip cache remove adrt || true
  test:
    name: 'test (${{ matrix.python }})'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11']
        include:
          - cflags: '-fsanitize=address -fsanitize=pointer-compare -fsanitize=pointer-subtract -fsanitize=undefined -fsanitize=bounds-strict -fsanitize=float-divide-by-zero -fsanitize=float-cast-overflow -fno-sanitize-recover=all'
          - python: '3.8'
            cflags: '-fopenmp'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Setup Python
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ matrix.python }}
    - name: Cache pip downloads
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-test-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ github.run_id }}
        restore-keys: pip-test-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build
        python -m pip install --upgrade -r tests/test_requirements.txt
    - name: Build package
      run: python -m build --wheel
      env:
        CPPFLAGS: '-U_FORTIFY_SOURCE -UNDEBUG -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC'
        CFLAGS: '-O3 ${{ matrix.cflags }} -fno-omit-frame-pointer -g -flto -fvisibility=hidden -fvisibility-inlines-hidden -fcf-protection=full -fstack-protector-strong -fstack-clash-protection -fno-math-errno -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wsign-compare -Wfloat-conversion -Wstrict-overflow=5 -Wfloat-equal -Wimplicit-fallthrough -Warray-bounds=2 -Wvla -Wunused-result -Wduplicated-branches -Wduplicated-cond -Wnull-dereference -Wstack-protector -Wtrampolines -Walloca -Wshift-overflow=2 -Wswitch-default -Wshadow -Wundef -Wcast-align=strict -Wstringop-overflow=4 -Wformat=2 -Wformat-overflow=2 -Wformat-truncation=2 -Wformat-signedness'
    - name: Install package
      run: python -m pip install dist/adrt-*.whl
    - name: Run tests
      run: LD_PRELOAD="$(gcc -print-file-name=libasan.so) $(gcc -print-file-name=libubsan.so)" python -m pytest
      env:
        PYTHONMALLOC: 'malloc'
        ASAN_OPTIONS: 'detect_leaks=0:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1:detect_invalid_pointer_pairs=2'
    - name: Clean up
      run: python -m pip cache remove adrt || true
  test-cpp:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Cache Catch2
      uses: actions/cache@v3
      id: cache-catch2
      with:
        path: tests/cpp/catch2/catch.hpp
        key: catch2-3725c0f0a75f376
    - name: Setup Python
      if: steps.cache-catch2.outputs.cache-hit != 'true'
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: '3.10'
    - name: Download Catch2
      if: steps.cache-catch2.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade -r tools/download_catch2_requirements.txt
        python tools/download_catch2.py tests/cpp/catch2/catch.hpp
    - name: Build tests
      run: g++ -std=c++11 -g -fsanitize=address -fsanitize=leak -fsanitize=pointer-compare -fsanitize=pointer-subtract -fsanitize=undefined -fsanitize=bounds-strict -fsanitize=float-divide-by-zero -fsanitize=float-cast-overflow -fno-sanitize-recover=all -fno-omit-frame-pointer -U_FORTIFY_SOURCE -UNDEBUG -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -Wall -Wextra -Wpedantic $(find src/adrt tests/cpp/ -name '*.cpp' -not -name 'adrt_cdefs_py.cpp') -I src/adrt/ -o tests/cpp/test_all
    - name: Run tests
      run: ./tests/cpp/test_all
      env:
        ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1'
